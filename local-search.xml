<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>NodeJS的定时任务</title>
    <link href="/2023/01/26/NodeJS%E7%9A%84%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    <url>/2023/01/26/NodeJS%E7%9A%84%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="NodeJS的定时任务"><a href="#NodeJS的定时任务" class="headerlink" title="NodeJS的定时任务"></a>NodeJS的定时任务</h1><h3 id="使用node-schedule库"><a href="#使用node-schedule库" class="headerlink" title="使用node-schedule库"></a>使用node-schedule库</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsx">npm install node-schedule<br></code></pre></td></tr></table></figure><p>Node Schedule 中的每个定时任务都由一个<code>Job</code>对象表示。可以手动创建，然后执行<code>schedule()</code>方法以应用任务，或使用<code>scheduleJob()</code>如下。</p><p><code>Job</code>对象是`EventEmitter，并发出以下事件：</p><ul><li><code>run</code>每次执行后的事件。</li><li><code>scheduled</code>每次计划运行时的事件。</li><li>一<code>canceled</code>，当它在执行之前调用被取消的事件。</li><li>一个<code>error</code>当被触发调度作业调用抛出或退出事件拒绝<code>Promise</code>。</li></ul><p>（<code>scheduled</code>和<code>canceled</code>事件都接收一个 JavaScript 日期对象作为参数）。 注意的是，任务是第一次立即执行的，因此如果使用<code>scheduleJob()</code>方法创建任务，将错过第一个<code>scheduled</code> 事件触发，但您可以手动查询调用。</p><h3 id="Cron格式"><a href="#Cron格式" class="headerlink" title="Cron格式"></a><strong>Cron格式</strong></h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs jsx">*    *    *    *    *    *<br>┬    ┬    ┬    ┬    ┬    ┬<br>│    │    │    │    │    │<br>│    │    │    │    │    └ day <span class="hljs-keyword">of</span> week (<span class="hljs-number">0</span> - <span class="hljs-number">7</span>) (<span class="hljs-number">0</span> or <span class="hljs-number">7</span> is <span class="hljs-title class_">Sun</span>)<br>│    │    │    │    └───── month (<span class="hljs-number">1</span> - <span class="hljs-number">12</span>)<br>│    │    │    └────────── day <span class="hljs-keyword">of</span> month (<span class="hljs-number">1</span> - <span class="hljs-number">31</span>)<br>│    │    └─────────────── hour (<span class="hljs-number">0</span> - <span class="hljs-number">23</span>)<br>│    └──────────────────── minute (<span class="hljs-number">0</span> - <span class="hljs-number">59</span>)<br>└───────────────────────── second (<span class="hljs-number">0</span> - <span class="hljs-number">59</span>, <span class="hljs-variable constant_">OPTIONAL</span>)<br><br>每分钟的第<span class="hljs-number">30</span>秒触发： <span class="hljs-string">&#x27;30 * * * * *&#x27;</span><br><br>每小时的<span class="hljs-number">1</span>分<span class="hljs-number">30</span>秒触发 ：<span class="hljs-string">&#x27;30 1 * * * *&#x27;</span><br><br>每天的凌晨<span class="hljs-number">1</span>点<span class="hljs-number">1</span>分<span class="hljs-number">30</span>秒触发 ：<span class="hljs-string">&#x27;30 1 1 * * *&#x27;</span><br><br>每月的<span class="hljs-number">1</span>日<span class="hljs-number">1</span>点<span class="hljs-number">1</span>分<span class="hljs-number">30</span>秒触发 ：<span class="hljs-string">&#x27;30 1 1 1 * *&#x27;</span><br><br><span class="hljs-number">2016</span>年的<span class="hljs-number">1</span>月<span class="hljs-number">1</span>日<span class="hljs-number">1</span>点<span class="hljs-number">1</span>分<span class="hljs-number">30</span>秒触发 ：<span class="hljs-string">&#x27;30 1 1 1 2016 *&#x27;</span><br><br>每周<span class="hljs-number">1</span>的<span class="hljs-number">1</span>点<span class="hljs-number">1</span>分<span class="hljs-number">30</span>秒触发 ：<span class="hljs-string">&#x27;30 1 1 * * 1&#x27;</span><br></code></pre></td></tr></table></figure><p>🤨<strong>这里是个人对node-schedule封装类来使用增删改查定时任务</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">const</span> schedule = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;node-schedule&#x27;</span>);<br><br><span class="hljs-built_in">exports</span>.<span class="hljs-property">Interval</span> = <span class="hljs-keyword">class</span> <span class="hljs-title class_">Interval</span> &#123;<br>  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">&#123; unit_name, maintain_time, last_alarm &#125;</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">unit_name</span> = unit_name          <span class="hljs-comment">// 任务名字</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">maintain_time</span> = maintain_time  <span class="hljs-comment">// 定时时间</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">last_alarm</span> = last_alarm || <span class="hljs-string">&quot;&quot;</span>        <span class="hljs-comment">// 上一次定时任务名字</span><br>  &#125;<br><br>  <span class="hljs-comment">// 生成新的定时任务</span><br>  <span class="hljs-keyword">async</span> <span class="hljs-title function_">create</span>(<span class="hljs-params">callback</span>) &#123;<br>    <span class="hljs-comment">// 终止之前的定时任务</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">last_alarm</span> !== <span class="hljs-string">&quot;&quot;</span>) &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">delete</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">last_alarm</span>)<br>    &#125;<br>    schedule.<span class="hljs-title function_">scheduleJob</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.unit_name&#125;</span>`</span>, <span class="hljs-string">`<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.maintain_time&#125;</span>`</span>, callback);<br>  &#125;<br><br>  <span class="hljs-comment">// 删除定时任务</span><br>  <span class="hljs-title function_">delete</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span> (schedule.<span class="hljs-property">scheduledJobs</span>[<span class="hljs-variable language_">this</span>.<span class="hljs-property">unit_name</span>]) &#123;<br>      schedule.<span class="hljs-property">scheduledJobs</span>[<span class="hljs-variable language_">this</span>.<span class="hljs-property">unit_name</span>].<span class="hljs-title function_">cancel</span>();<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>  &#125;<br><br>  <span class="hljs-comment">// 找到一个定时任务</span><br>  <span class="hljs-title function_">findOne</span>(<span class="hljs-params">name</span>) &#123;<br>    <span class="hljs-keyword">if</span> (schedule.<span class="hljs-property">scheduledJobs</span>[name]) &#123;<br>      <span class="hljs-keyword">return</span> schedule.<span class="hljs-property">scheduledJobs</span>[name]<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;未找到任务名&quot;</span>)<br>    &#125;<br>  &#125;<br><br>  <span class="hljs-comment">// 查看所有的定时任务</span><br>  <span class="hljs-title function_">findAll</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> schedule.<span class="hljs-property">scheduledJobs</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="这里是调用时定时任务Interval实例"><a href="#这里是调用时定时任务Interval实例" class="headerlink" title="这里是调用时定时任务Interval实例"></a><strong>这里是调用时定时任务Interval实例</strong></h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-comment">// 定时任务</span><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Util</span>.<span class="hljs-title class_">Interval</span>(&#123;<br>  <span class="hljs-attr">unit_name</span>: <span class="hljs-string">&#x27;自动分发任务 0 0 12 * * *&#x27;</span>,<br>  <span class="hljs-attr">maintain_time</span>: <span class="hljs-string">&#x27;0 0 12 * * *&#x27;</span>,<br>  <span class="hljs-attr">last_alarm</span>: <span class="hljs-string">&#x27;自动分发任务 0 0 12 * * *&#x27;</span><br>&#125;).<span class="hljs-title function_">create</span>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>  <span class="hljs-comment">// 写入你自己想在定时任务触发的时候，想要执行的函数</span><br>&#125;)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
